require 'spec_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by the Rails when you ran the scaffold generator.

describe TitlereceiptsController do

  def mock_titlereceipt(stubs={})
    @mock_titlereceipt ||= mock_model(Titlereceipt, stubs).as_null_object
  end

  before (:each) do
    @user = Factory.create(:user)
    sign_in @user
  end
  
  describe "GET index" do
    it "assigns all titlereceipts as @titlereceipts" do
      Titlereceipt.stub(:all) { [mock_titlereceipt] }
      get :index
      assigns(:titlereceipts).should eq([mock_titlereceipt])
    end
  end

  describe "GET show" do
    it "assigns the requested titlereceipt as @titlereceipt" do
      Titlereceipt.stub(:find).with("37") { mock_titlereceipt }
      get :show, :id => "37"
      assigns(:titlereceipt).should be(mock_titlereceipt)
    end
  end

  describe "GET new" do
    it "assigns a new titlereceipt as @titlereceipt" do
      Titlereceipt.stub(:new) { mock_titlereceipt }
      get :new
      assigns(:titlereceipt).should be(mock_titlereceipt)
    end
  end

  describe "GET edit" do
    it "assigns the requested titlereceipt as @titlereceipt" do
      Titlereceipt.stub(:find).with("37") { mock_titlereceipt }
      get :edit, :id => "37"
      assigns(:titlereceipt).should be(mock_titlereceipt)
    end
  end

  describe "POST create" do
    describe "with valid params" do
      #it "assigns a newly created titlereceipt as @titlereceipt" do
        #Titlereceipt.stub(:new).with({:isbn => '1234567890123', :created_by => 1, :modified_by => 1, :supplier_id => 1, :invoice_no => "1", :box_no => 1}) { mock_titlereceipt(:save => true) }
        #post :create, :titlereceipt => {:isbn => '1234567890123', :created_by => 1, :modified_by => 1, :supplier_id => 1, :invoice_no => "1", :box_no => 1}
        #assigns(:titlereceipt).should be(mock_titlereceipt)
      #end

      it "redirects to the created titlereceipt" do
        Titlereceipt.stub(:new) { mock_titlereceipt(:save => true) }
        post :create, :titlereceipt => {}
        response.should redirect_to(titlereceipt_url(mock_titlereceipt))
      end
    end

    describe "with invalid params" do
      #it "assigns a newly created but unsaved titlereceipt as @titlereceipt" do
        #Titlereceipt.stub(:new).with({'these' => 'params'}) { mock_titlereceipt(:save => false) }
        #post :create, :titlereceipt => {'these' => 'params'}
        #assigns(:titlereceipt).should be(mock_titlereceipt)
      #end

      it "re-renders the 'new' template" do
        Titlereceipt.stub(:new) { mock_titlereceipt(:save => false) }
        post :create, :titlereceipt => {}
        response.should render_template("new")
      end
    end
  end

  describe "PUT update" do
    describe "with valid params" do
      it "updates the requested titlereceipt" do
        Titlereceipt.stub(:find).with("37") { mock_titlereceipt }
        mock_titlereceipt.should_receive(:update_attributes).with({'these' => 'params'})
        put :update, :id => "37", :titlereceipt => {'these' => 'params'}
      end

      it "assigns the requested titlereceipt as @titlereceipt" do
        Titlereceipt.stub(:find) { mock_titlereceipt(:update_attributes => true) }
        put :update, :id => "1"
        assigns(:titlereceipt).should be(mock_titlereceipt)
      end

      it "redirects to the titlereceipt" do
        Titlereceipt.stub(:find) { mock_titlereceipt(:update_attributes => true) }
        put :update, :id => "1"
        response.should redirect_to(titlereceipt_url(mock_titlereceipt))
      end
    end

    describe "with invalid params" do
      it "assigns the titlereceipt as @titlereceipt" do
        Titlereceipt.stub(:find) { mock_titlereceipt(:update_attributes => false) }
        put :update, :id => "1"
        assigns(:titlereceipt).should be(mock_titlereceipt)
      end

      it "re-renders the 'edit' template" do
        Titlereceipt.stub(:find) { mock_titlereceipt(:update_attributes => false) }
        put :update, :id => "1"
        response.should render_template("edit")
      end
    end
  end

  describe "DELETE destroy" do
    it "destroys the requested titlereceipt" do
      Titlereceipt.stub(:find).with("37") { mock_titlereceipt }
      mock_titlereceipt.should_receive(:destroy)
      delete :destroy, :id => "37"
    end

    it "redirects to the titlereceipts list" do
      Titlereceipt.stub(:find) { mock_titlereceipt }
      delete :destroy, :id => "1"
      response.should redirect_to(titlereceipts_url)
    end
  end

end
